# プレフィックスキーをctrl+qに変更
set -g prefix C-q

# デフォルトのプレフィックスキーctrl+bを解除
unbind C-b

# プレフィックスキー+^でペインを垂直分割する
bind ^ split-window -h

# プレフィックスキー+-でペインを水平分割する
bind - split-window -v

# 256色モードを有効化
set-option -g default-terminal screen-256color
set -g terminal-overrides 'xterm:colors=256'

# ステータスラインの文字色、背景色を変更
setw -g status-style fg=colour255,bg=colour234

# zshを読み込む
# set-option -g default-shell /bin/zsh

# マウス操作を有効化
set-option -g mouse on

# copy-pipeと競合する場合があるので無効化するらしい
set -s set-clipboard off

# OS が Linux の時は xsel を使う
if-shell -b '[ "$(uname)" = "Linux" ]' {
  set -s copy-command "xsel --clipboard --input"
  display "using xsel as copy-command"
}

# OS が Darwin の時は pbcopy を使う
if-shell -b '[ "$(uname)" = "Darwin" ]' {
  set -s copy-command "pbcopy"
  display "using pbcopy as copy-command"
}

# viキーバインドの設定 : tmuxの操作をvimキーバードでできるように
set-window-option -g mode-keys vi
# vi-bind
set -g mode-keys vi

# vでコピーしたい範囲の選択を開始
bind -T copy-mode v send-keys -X begin-selection

# vimのようにyでコピー
bind -T copy-mode y send-keys -X copy-pipe-and-cancel "pbcopy"

# Vで行ごとの選択
bind -T copy-mode-vi V send-keys -X select-line

# マウスをドラッグして選択範囲を定め、それをヤンクしてコピーモードを終了する
bind -Tcopy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel

# clip board
bind -T copy-mode Enter send-keys -X copy-pipe-and-cancel "pbcopy"

bind Space copy-mode

set -s set-clipboard external
